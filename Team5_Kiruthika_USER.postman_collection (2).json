{
	"info": {
		"_postman_id": "7886dbf2-60f9-4901-aba4-9558d51447ea",
		"name": "Team5_Kiruthika_USER",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38962805"
	},
	"item": [
		{
			"name": "Add_New_User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(pm.response.text());\r",
							"\r",
							"console.log(jsonData);\r",
							"// environmental variable set to userid\r",
							"pm.environment.set(\"user_id\",jsonData.user_id);\r",
							"console.log(jsonData.user_id);\r",
							"\r",
							"// environmental variable set to userFirstname\r",
							"pm.environment.set(\"user_first_name\",jsonData.user_first_name);\r",
							"console.log(jsonData.user_first_name);\r",
							"\r",
							"var expectedStatusCode = pm.variables.get(\"statuscode\");\r",
							"pm.test(\"Status code :\", function () {\r",
							"    pm.response.to.have.status(expectedStatusCode);\r",
							"});\r",
							"\r",
							"console.log(\"Plot Number:\", pm.variables.get(\"plotNumber\"));\r",
							"console.log(\"Street:\", pm.variables.get(\"street\"));\r",
							"console.log(\"State:\", pm.variables.get(\"state\"));\r",
							"console.log(\"Country:\", pm.variables.get(\"country\"));\r",
							"console.log(\"Zip Code:\", pm.variables.get(\"zipCode\"));\r",
							"console.log(\"User First Name:\", pm.variables.get(\"user_first_name\"));\r",
							"console.log(\"User Last Name:\", pm.variables.get(\"user_last_name\"));\r",
							"console.log(\"User Contact Number:\", pm.variables.get(\"user_contact_number\"));\r",
							"console.log(\"User Email ID:\", pm.variables.get(\"user_email_id\"));\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "// {\r\n//         \"userAddress\": {\r\n//            \"plotNumber\": \"pl-21\",\r\n//             \"street\": \"Main street\",\r\n//              \"state\": \"GA\",\r\n//              \"country\": \"USA\",\r\n//              \"zipCode\": 30001\r\n//         },\r\n//         \"user_first_name\": \"kiru\",\r\n//         \"user_last_name\": \"muthu\",\r\n//         \"user_contact_number\": 4129967890,\r\n//         \"user_email_id\": \"team005kiki@gmail.com\"\r\n        \r\n//     }\r\n    // DATA DRIVEN-JSON\r\n{\r\n        \"userAddress\": {\r\n            \"plotNumber\": \"{{plotNumber}}\",\r\n            \"street\": \"{{street}}\",\r\n            \"state\": \"{{state}}\",\r\n            \"country\": \"{{country}}\",\r\n            \"zipCode\": \"{{zipCode}}\"\r\n        },\r\n        \"user_first_name\": \"{{user_first_name}}\",\r\n        \"user_last_name\": \"{{user_last_name}}\",\r\n        \"user_contact_number\": \"{{user_contact_number}}\",\r\n        \"user_email_id\": \"{{user_email_id}}\"\r\n        \r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{endpoint}}",
					"host": [
						"{{baseurl}}{{endpoint}}"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "All users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// status code validation\r",
							"var expectedStatusCode = pm.variables.get(\"statuscode\");\r",
							"pm.test(\"Status code :\", function () {\r",
							"    pm.response.to.have.status(expectedStatusCode);\r",
							"});\r",
							"// status Line validation\r",
							"\r",
							"// Content-Type header-vaidate\r",
							"pm.test(\"Content-Type is JSON\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{endpoint}}",
					"host": [
						"{{baseurl}}{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=JSON.parse(pm.response.text());\r",
							"//status code validate\r",
							"const expectedStatusCode = pm.variables.get(\"statuscode\");\r",
							"pm.test(\"Status code :\", function () {\r",
							"    pm.response.to.have.status(expectedStatusCode);\r",
							"});\r",
							"// Content-Type header-vaidate\r",
							"pm.test(\"Content-Type : \", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"// Check the status message\r",
							"pm.test(\"Status Line :\", function () {\r",
							"    if(typeof message==undefined && message.length>1){\r",
							"    pm.expect(jsonData.message).to.eql(message); \r",
							"    }else console.log(\"no messgae to print\");\r",
							"});\r",
							"// Data ,Data Type, Schema\r",
							"// schema validation\r",
							"var Ajv = require('ajv');\r",
							"var ajv = new Ajv();\r",
							"var schema={\r",
							" \r",
							"  \"type\": \"array\",\r",
							"  \"items\": [\r",
							"    {\r",
							"      \"type\": \"object\",\r",
							"      \"properties\": {\r",
							"        \"user_first_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"user_last_name\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"user_contact_number\": {\r",
							"          \"type\": \"integer\"\r",
							"        },\r",
							"        \"user_email_id\": {\r",
							"          \"type\": \"string\"\r",
							"        },\r",
							"        \"userAddress\": {\r",
							"          \"type\": \"object\",\r",
							"          \"properties\": {\r",
							"            \"plotNumber\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"street\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"state\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"country\": {\r",
							"              \"type\": \"string\"\r",
							"            },\r",
							"            \"zipCode\": {\r",
							"              \"type\": \"integer\"\r",
							"            },\r",
							"            \"statuscode\": {\r",
							"              \"type\": \"integer\"\r",
							"            }\r",
							"          },\r",
							"          \"required\": [\r",
							"            \"plotNumber\",\r",
							"            \"street\",\r",
							"            \"state\",\r",
							"            \"country\",\r",
							"            \"zipCode\",\r",
							"            \"statuscode\"\r",
							"          ]\r",
							"        }\r",
							"      },\r",
							"      \"required\": [\r",
							"        \"user_first_name\",\r",
							"        \"user_last_name\",\r",
							"        \"user_contact_number\",\r",
							"        \"user_email_id\",\r",
							"        \"userAddress\"\r",
							"      ]\r",
							"    }\r",
							"  ]\r",
							"}\r",
							"pm.test('Schema is valid :',function(){\r",
							"    pm.expect(ajv.validate(jsonData,schema)).to.be.true;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{endpoint}}",
					"host": [
						"{{baseurl}}{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User By FirstName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=JSON.parse(pm.response.text());\r",
							"//status code validate\r",
							"const expectedStatusCode = pm.variables.get(\"statuscode\");\r",
							"pm.test(\"Status code :\", function () {\r",
							"    pm.response.to.have.status(expectedStatusCode);\r",
							"});\r",
							"// Content-Type header-vaidate\r",
							"pm.test(\"Content-Type : \", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\r",
							"});\r",
							"// Check the status message\r",
							"pm.test(\"Status Line :\", function () {\r",
							"    if(typeof message==undefined && message.length>1){\r",
							"    pm.expect(jsonData.message).to.eql(message); \r",
							"    }else console.log(\"no messgae to print\");\r",
							"});\r",
							"// Data ,Data Type, Schema\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{endpoint}}",
					"host": [
						"{{baseurl}}{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(pm.response.text());\r",
							"\r",
							"console.log(jsonData);\r",
							"// environmental variable set to userid\r",
							"\r",
							"\r",
							"var expectedStatusCode = pm.variables.get(\"statuscode\");\r",
							"pm.test(\"Status code :\", function () {\r",
							"    pm.response.to.have.status(expectedStatusCode);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "// {\r\n//         \"userAddress\": {\r\n//            \"plotNumber\": \"pl-21\",\r\n//             \"street\": \"Main street\",\r\n//              \"state\": \"GA\",\r\n//              \"country\": \"USA\",\r\n//              \"zipCode\": 30001\r\n//         },\r\n//         \"user_first_name\": \"kiru\",\r\n//         \"user_last_name\": \"muthu\",\r\n//         \"user_contact_number\": 4129967890,\r\n//         \"user_email_id\": \"team005kiki@gmail.com\"\r\n        \r\n//     }\r\n    {\r\n        \"userAddress\": {\r\n            \"plotNumber\": \"{{plotNumber}}\",\r\n            \"street\": \"{{street}}\",\r\n            \"state\": \"{{state}}\",\r\n            \"country\": \"{{country}}\",\r\n            \"zipCode\": \"{{zipCode}}\"\r\n        },\r\n        \"user_first_name\": \"{{user_first_name}}\",\r\n        \"user_last_name\": \"{{user_last_name}}\",\r\n        \"user_contact_number\": \"{{user_contact_number}}\",\r\n        \"user_email_id\": \"{{user_email_id}}\"\r\n        \r\n    }\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}{{endpoint}}",
					"host": [
						"{{baseurl}}{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delUser By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=JSON.parse(pm.response.text());\r",
							"\r",
							"//status code validate\r",
							"const expectedStatusCode = pm.variables.get(\"statuscode\");\r",
							"pm.test(\"Status code :\", function () {\r",
							"    pm.response.to.have.status(expectedStatusCode);\r",
							"});\r",
							"\r",
							"// Check the status message\r",
							"pm.test(\"Messgae :\", function () {\r",
							"    if(typeof message==undefined && message.length>1){\r",
							"    pm.expect(jsonData.message).to.eql(message); \r",
							"    }\r",
							"    else\r",
							"     console.log(\"no message to print\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{endpoint}}",
					"host": [
						"{{baseurl}}{{endpoint}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delUser By FirstName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the JSON response\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"const expectedStatusCode = pm.variables.get(\"statuscode\");\r",
							"pm.test(\"Status code :\", function () {\r",
							"    pm.response.to.have.status(expectedStatusCode);\r",
							"});\r",
							"// // Check the status message\r",
							"// pm.test(\"Status Line :\", function () {\r",
							"//     pm.expect(jsonData.message).to.eql(\"User does not exist with name 'kiru'\");\r",
							"//     // User is deleted successfully\r",
							"// });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}{{endpoint}}",
					"host": [
						"{{baseurl}}{{endpoint}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{Password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{Username}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"if (typeof pm.variables.get('requestdata') !== 'object') {\r",
					"    pm.variables.set('requestdata', pm.iterationData.toObject());\r",
					"}\r",
					"const requestdata = pm.variables.get('requestdata');\r",
					"if(typeof requestdata !== 'object' || Object.keys(requestdata).length ===0) {\r",
					"    console.log(\"No external file found\")\r",
					"    return;\r",
					"}\r",
					"const currentrequest = requestdata.requests.filter(({name}) => name === pm.info.requestName) [0];\r",
					"if(!currentrequest){\r",
					"    console.log(`Request ${pm.info.requestName} has no data defined.`);\r",
					"}\r",
					"const variables = currentrequest.data.shift();\r",
					"Object.entries(variables).forEach(([key, value]) => {\r",
					"        pm.variables.set(key, value);\r",
					"    });\r",
					"pm.variables.set('requestdata',requestdata);\r",
					"if(currentrequest.data.length > 0){\r",
					"    pm.execution.setNextRequest(pm.info.requestName)\r",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Username",
			"value": "Numpy@gmail.com"
		},
		{
			"key": "Password",
			"value": "userapi@october"
		}
	]
}